import { useEffect, useRef } from 'react';
import { webSocketService } from '../../services/WebSocketService';

/**
 * WebSocketManager - A component that manages WebSocket connections at the app level
 * This component doesn't render anything visible, it just manages WebSocket connections
 */
export const WebSocketManager: React.FC = () => {
  // Use a ref to track initialization state
  const isInitializedRef = useRef(false);
  
  // Initialize WebSocket connections only once
  useEffect(() => {
    // Only initialize once
    if (!isInitializedRef.current) {
      isInitializedRef.current = true;
      
      console.log("Initializing WebSocket connection...");
      
      // Initialize the WebSocket connection
      webSocketService.restoreConnection();
      
      // No need to set up additional event listeners or timers
      // as they are now handled by the WebSocketService
    }
    
    // No cleanup needed on unmount - the WebSocketService maintains the connection
    // and handles cleanup internally
  }, []);
  
  // This component doesn't render anything
  return null;
};